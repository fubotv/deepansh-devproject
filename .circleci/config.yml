version: 2.1
jobs:
  build:
    docker:
      - image: gcr.io/fubotv-dev/data-engineering/build-env/de-sbt-docker:latest
        auth:
          username: _json_key
          password: ${DEV_GCLOUD_KEY_JSON}
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
      - run: echo ${CIRCLE_BUILD_NUM} > docker-build.txt
      - run:
          name: sbt build
          command: |
            .circleci/scripts/gcp-login.sh
            export GITHUB_TOKEN=$(gcloud secrets versions access latest --secret="${DE_BOT_GITHUB_TOKEN_SECRET}")
            cat /dev/null | sbt clean compile
      - save_cache:
          key: v1-dependencies-{{ checksum "build.sbt" }}
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
            - "/var/lib/docker/"

  deploy:
    docker:
      - image: gcr.io/fubotv-dev/data-engineering/build-env/de-sbt-docker:latest
        auth:
          username: _json_key
          password: ${DEV_GCLOUD_KEY_JSON}
    environment:
      PROJECT_ID: fubotv-dev
    steps:
      - checkout
      - setup_remote_docker:
         docker_layer_caching: true
      - run:
          name: echo env
          command: |
            source .circleci/scripts/env_var.sh
            env="${DEPLOY_ENV_SHORT}"
      - run:
          name: build docker image
          command: |
            .circleci/scripts/gcp-login.sh
            export GITHUB_TOKEN=$(gcloud secrets versions access latest --secret="${DE_BOT_GITHUB_TOKEN_SECRET}")
            cat /dev/null | sbt docker:publishLocal
      - run:
          name: Deploy --copy jar and dag files into the gcp composer bucket--
          command: |
            export projectId="${GCLOUD_PROJECT_ID}"
            export ENV=`echo ${DEPLOY_ENV_SHORT} | tr '[:lower:]' '[:upper:]'`
            export TAG=`git rev-parse --short=10 HEAD`

            echo ">>> projectId=[${projectId}]" | tr '[:lower:]' '[:upper:]'
            docker tag deepansh-devproject:${TAG} gcr.io/${projectId}/de-engineering/deepansh-devproject:${TAG}
            gcloud docker -- push gcr.io/${projectId}/de-engineering/deepansh-devproject:${TAG}

            docker tag deepansh-devproject:${TAG} gcr.io/${projectId}/de-engineering/deepansh-devproject:latest
            gcloud docker -- push gcr.io/${projectId}/de-engineering/deepansh-devproject:latest

            dagUrl="${ROOT_COMPOSER2_DAG_URL}"
            echo ">>> copying dags to  ${dagUrl}" | tr '[:lower:]' '[:upper:]'

            gsutil -m cp ~/project/src/main/python/*.py ${dagUrl}/dags

workflows:
  version: 2
  build_deploy-DEV:
    jobs:
      - build:
          context:
            - de-common
            - de-dev
            - fubotv-gci-pull
          filters:
            branches:
              only:
                - main
                - master
                - /^(feature).*/
                - /^(test-deploy).*(-dev).*$/
            tags:
              ignore:
                - /.*/
      - deploy:
          context:
            - de-common
            - de-dev
            - fubotv-gci-pull
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - master
                - /^(feature).*/
                - /^(test-deploy).*(-dev).*$/
            tags:
              ignore:
                - /.*/